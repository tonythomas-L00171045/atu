AWSTemplateFormatVersion: "2010-09-09"
Description: Create Subnet and Routetable
Parameters:
  VPCId:
    Description: Name of VPC Id from Output
    Type: String
  GatewayId:
    Description: Name of Gateway Id from Output
    Type: String
  SubnetId:
    Description: Name of the Subnet Id to Output
    Type: String
  RouteTableId:
    Description: Name of the RouteTable Id to Output
    Type: String
  CidrBlock:
    Description: IP range for subnet
    Type: String
    Default: 10.0.0.0/24
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."
  IsPublic:
    Description: Set whether the subnet is public; sets MapPublicIpOnLaunch = true
    Type: String
    Default: true
  SubnetDestinationCidrBlock:
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."

Conditions:
  CreatePublicRoute: !Equals 
    - !Ref IsPublic
    - true


Resources:

  # Public Subnet
  demoSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Fn::ImportValue: !Ref VPCId
      CidrBlock: !Ref CidrBlock
      AvailabilityZone: "us-east-1a"
      MapPublicIpOnLaunch: !Ref IsPublic
      Tags:
       - Key: Project
         Value: atudevopsdemo1
       - Key: Name
         Value: !Ref SubnetId

  # RouteTable for Subnet1
  demoRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Fn::ImportValue: !Ref VPCId
      Tags:
       - Key: Project
         Value: atudevopsdemo1
       - Key: Name
         Value: !Ref RouteTableId

  # Associate Subnet and Routetable
  demoSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref demoRouteTable
      SubnetId: !Ref demoSubnet

  # Route for Subnet1
  demoRoute:
    Type: AWS::EC2::Route
    Condition: CreatePublicRoute
    Properties:
      RouteTableId: !Ref demoRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: 
        Fn::ImportValue: !Ref GatewayId

# Exports
Outputs:
  demoSubnet:
    Description: Subnet Id
    Value: 
      Ref: demoSubnet
    Export:
      Name: !Ref SubnetId