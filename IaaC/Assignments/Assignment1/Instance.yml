AWSTemplateFormatVersion: "2010-09-09"
Description: Template for creating ec2 instance, security group. Will have 2 set of Ingress and a single Egress

Parameters:
  VPCId:
    Description: Name of VPC Id from Output
    Type: String
  GatewayId:
    Description: Name of Gateway Id from Output
    Type: String

  SubnetId:
    Description: Name of the Subnet Id to Output
    Type: String
  ImageId:
    Description: ami Image Id
    Type: String
  InstanceName:
    Description: Name of the instnce
    Type: String
  SecurityGroupName:
    Description: Name of the Security Group
    Type: String
  InstanceKeyName:
    Description: Name of the Security Group
    Type: String

  SecurityGroupEgressProtocol1:
    Description: Egress 1 IP protocol
    Type: String
    AllowedValues:
      - icmp
      - tcp    
  SecurityGroupEgressIP1:
    Description: Egress 1 IP range
    Type: String
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."
    Default: 0.0.0.0/0
  SecurityGroupEgressIP1:
    Description: Egress 1 IP range
    Type: String
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."
    Default: 0.0.0.0/0
  SecurityGroupEgressPort1:
    Description: Egress 1 From/To ports
    Type: Number

  SecurityGroupIngressProtocol1:
    Description: Ingress 1 IP protocol
    Type: String
    AllowedValues:
      - icmp
      - tcp    
  SecurityGroupIngressIP1:
    Description: Ingress 1 IP range
    Type: String
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."
    Default: 0.0.0.0/0
  SecurityGroupIngressIP1:
    Description: Ingress 1 IP range
    Type: String
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."
    Default: 0.0.0.0/0
  SecurityGroupIngressPort1:
    Description: Ingress 1 From/To ports
    Type: Number

  SecurityGroupIngressProtocol2:
    Description: Ingress 2 IP protocol
    Type: String
    AllowedValues:
      - icmp
      - tcp    
  SecurityGroupIngressIP2:
    Description: Ingress 2 IP range
    Type: String
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."
    Default: 0.0.0.0/0
  SecurityGroupIngressIP2:
    Description: Ingress 2 IP range
    Type: String
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."
    Default: 0.0.0.0/0
  SecurityGroupIngressPort2:
    Description: Ingress 2 From/To ports
    Type: Number  

Resources:
  # an EC2 instance depending on the below security group
  ec2Instance:
    Type: AWS::EC2::Instance
    DependsOn: ["securityGroup"]
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref ImageId
      KeyName: !Ref InstanceKeyName
      SecurityGroupIds: [!Ref securityGroup]
      SubnetId: 
        Fn::ImportValue: !Ref SubnetId
      Tags:
        - Key: "Name"
          Value: !Ref InstanceName
        - Key: "Project"
          Value: "atudevopsdemo"  
  
  securityGroup:
    # security group for the above ec2 instance
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh to client host
      VpcId:
        Fn::ImportValue: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: !Ref SecurityGroupIngressProtocol1
          FromPort: !Ref SecurityGroupIngressPort1
          ToPort: !Ref SecurityGroupIngressPort1
          CidrIp: !Ref SecurityGroupIngressIP1
        - IpProtocol: !Ref SecurityGroupIngressProtocol2
          FromPort: !Ref SecurityGroupIngressPort2
          ToPort: !Ref SecurityGroupIngressPort2
          CidrIp: !Ref SecurityGroupIngressIP2

      SecurityGroupEgress:
        - IpProtocol: !Ref SecurityGroupEgressProtocol1
          FromPort: !Ref SecurityGroupEgressPort1
          ToPort: !Ref SecurityGroupEgressPort1
          CidrIp: !Ref SecurityGroupEgressIP1
          
      Tags:
       - Key: "Project"
         Value: atudevopsdemo1
       - Key: "Name"
         Value: !Ref SecurityGroupName